package rules;

import java.util.Set;
import java.util.HashSet;
import models.ProductOrder;

global Set<String> workingDays;

rule "Working Day Rule"
when
    $order: ProductOrder()
then
    System.out.println("Rule triggered!");
    // Check if the current day is a working day based on the set of working days specified in the global variable
    java.util.Calendar cal = java.util.Calendar.getInstance();
    cal.setTime($order.getOrderDate());
    String dayInWeek = cal.getDisplayName(java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.LONG, java.util.Locale.US);
    boolean isWorkingDay = workingDays.contains(dayInWeek);

    if (isWorkingDay) {
        $order.setOrderProcessDate($order.getOrderDate());
    } else {
        // Set it to the date of the next working day
        do {
            cal.add(java.util.Calendar.DAY_OF_MONTH, 1);
        } while (!workingDays.contains(cal.getDisplayName(java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.LONG, java.util.Locale.US)));

        $order.setOrderProcessDate(cal.getTime());
    }

end
